#include <iostream>

using namespace std;

//Function to find maximum
/*int Max(int x, int y)
{
	return x >y ? x:y;
}
//Function can be overloaded every time
float Max(float x, float y)
{
	return x >y ? x:y;
}*/

template <typename T> //T is place holder for type
//Keyword Class can also be used
T Max(T x,T y){
	return x >y ? x:y;
}
//The compiler will automatically generate the function for appropriate type
//The compiler examine the arguments of function call and will deduce the type of T
int main()
{
	auto num = Max(3,8);
	//Compiler will create Max<int>
	cout<<num<<endl;
	auto num2 = Max(4.6f , 2.3f);
	//Compiler will create Max<float>
	//Compiler would have created 2 Functions with Max

	//If Function template is not invoked, then function is not generated by compiler
	cout<<num2<<endl;

	return 0;
}
