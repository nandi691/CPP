#include <iostream>

using namespace std;

template <typename T>
T Max(T x,T y){
	//cout<<typeid(T).name()<<endl;
	return x >y ? x:y;
}

template char Max(char x, char y); //Explicit instantiation

//Explicit specialization
template<> const char * Max(const char * x, const char * y){
	cout<<"Explicit Specialization"<<endl;
	return strcmp(x,y) > 0?x:y;
}

int main()
{
	const char *b {"B"};
	const char *a {"A"};
	auto s = Max(a,b);
	cout<<s<<endl; // This will return A w/o Explicit specialization, which is wrong

	return 0;
}
